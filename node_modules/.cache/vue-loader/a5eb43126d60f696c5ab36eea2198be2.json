{"remainingRequest":"/home/ekong/tescod/eduka-test/SimpleTestPlatform/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ekong/tescod/eduka-test/SimpleTestPlatform/src/App.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/home/ekong/tescod/eduka-test/SimpleTestPlatform/src/App.vue","mtime":1587750191315},{"path":"/home/ekong/tescod/eduka-test/SimpleTestPlatform/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ekong/tescod/eduka-test/SimpleTestPlatform/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/ekong/tescod/eduka-test/SimpleTestPlatform/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/ekong/tescod/eduka-test/SimpleTestPlatform/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ekong/tescod/eduka-test/SimpleTestPlatform/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCiNhcHAgewogIGZvbnQtZmFtaWx5OiBBdmVuaXIsIEhlbHZldGljYSwgQXJpYWwsIHNhbnMtc2VyaWY7CiAgLXdlYmtpdC1mb250LXNtb290aGluZzogYW50aWFsaWFzZWQ7CiAgLW1vei1vc3gtZm9udC1zbW9vdGhpbmc6IGdyYXlzY2FsZTsKICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgY29sb3I6ICMyYzNlNTA7CiAgbWFyZ2luLXRvcDogNjBweDsKfQo="},{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n  <div id=\"app\">\n    <Question :questionDesc=\"questionText\" :question=\"quest\" :answer=\"answerList\" />\n  </div>\n</template>\n\n<script>\nimport Question from './components/Question.vue'\nimport axios from \"axios\"\n\nexport default {\n  name: 'App',\n  components: {\n    Question\n  },\n  data() {\n    return {\n      questionText : \"\",\n      quest: \"\",\n      answerList: []\n    }\n  },\n  mounted() {\n    this.onLoad()\n  },\n  methods: {\n    onLoad () {\n      var payloads\n        axios.get('http://localhost:3000/questions/1').then(res => {\n          payloads = res.data\n        }).catch ((err) => {\n          console.log(err);\n        })\n        console.log(payloads)\n    }\n  }\n}\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n</style>\n"]}]}