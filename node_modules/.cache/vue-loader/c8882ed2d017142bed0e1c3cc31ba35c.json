{"remainingRequest":"/home/ekong/tescod/eduka-test/SimpleTestPlatform/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ekong/tescod/eduka-test/SimpleTestPlatform/src/components/Question.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/ekong/tescod/eduka-test/SimpleTestPlatform/src/components/Question.vue","mtime":1587754111189},{"path":"/home/ekong/tescod/eduka-test/SimpleTestPlatform/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ekong/tescod/eduka-test/SimpleTestPlatform/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/ekong/tescod/eduka-test/SimpleTestPlatform/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ekong/tescod/eduka-test/SimpleTestPlatform/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lIDogIlF1ZXN0aW9uIiwKICBwcm9wczogewogICAgcXVlc3Rpb25EZXNjOiBTdHJpbmcsCiAgICBxdWVzdGlvbjogU3RyaW5nLAogICAgYW5zd2VyOiBTdHJpbmcKICB9LAogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBzZWxlY3RlZEFuc3dlcjogIiIKICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIG9uQ2hlY2tlZChldmVudCkgewogICAgICAgIHZhciBvcHRpb25UZXh0ID0gZXZlbnQudGFyZ2V0CiAgICAgICAgaWYgKG9wdGlvblRleHQudmFsdWUgPT09IHRoaXMuc2VsZWN0ZWRBbnN3ZXIpIHsKICAgICAgICAgIG9wdGlvblRleHQuY2hlY2tlZCA9IGZhbHNlCiAgICAgICAgICB0aGlzLnNlbGVjdGVkQW5zd2VyID0gIiIKICAgICAgICB9IGVsc2UgewogICAgICAgIHRoaXMuc2VsZWN0ZWRBbnN3ZXIgPSBvcHRpb25UZXh0LnZhbHVlCiAgICAgICAgY29uc29sZS5sb2codGhpcy5zZWxlY3RlZEFuc3dlcikKICAgICAgICB9CiAgICB9CiAgfQp9Cg=="},{"version":3,"sources":["Question.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Question.vue","sourceRoot":"src/components","sourcesContent":["<template>\n<div>\n  <div class=\"question-box\">\n    {{ questionDesc}}\n  </div>\n  <div class=\"question-answer\">\n    <div class=\"question\">\n      <p> {{ question }} </p>\n    </div>\n    <div class=\"answer\">\n      <form>\n        <label class=\"container\">{{ answer[0] }}\n          <input type=\"radio\" name=\"radio\" value=\"A\" @click=\"onChecked($event)\">\n          <span class=\"checkmark\">A</span>\n        </label>\n        <label class=\"container\"> {{ answer[1] }}\n          <input type=\"radio\" name=\"radio\" value=\"B\" @click=\"onChecked($event)\">\n          <span class=\"checkmark\">B</span>\n        </label>\n        <label class=\"container\"> {{ answer[2] }}\n          <input type=\"radio\" name=\"radio\" value=\"C\" @click=\"onChecked($event)\">\n          <span class=\"checkmark\">C</span>\n        </label>\n        <label class=\"container\"> {{ answer[3] }}\n          <input type=\"radio\" name=\"radio\" value=\"D\" @click=\"onChecked($event)\">\n          <span class=\"checkmark\">D</span>\n        </label>\n      </form>\n    </div>  \n  </div>\n</div>\n</template>\n\n<script>\nexport default {\n  name : \"Question\",\n  props: {\n    questionDesc: String,\n    question: String,\n    answer: String\n  },\n  data() {\n    return {\n      selectedAnswer: \"\"\n    }\n  },\n  methods: {\n    onChecked(event) {\n        var optionText = event.target\n        if (optionText.value === this.selectedAnswer) {\n          optionText.checked = false\n          this.selectedAnswer = \"\"\n        } else {\n        this.selectedAnswer = optionText.value\n        console.log(this.selectedAnswer)\n        }\n    }\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.container {\n  display: block;\n  position: relative;\n  padding-left: 45px;\n  margin-bottom: 12px;\n  cursor: pointer;\n  font-size: 15px;\n}\n\n/* Hide the browser's default radio button */\n.container input {\n  position: absolute;\n  opacity: 0;\n  cursor: pointer;\n}\n\n/* Create a custom radio button */\n.checkmark {\n  position: absolute;\n  top: 0;\n  left: 0;\n  height: 22px;\n  width: 22px;\n  background-color: #eee;\n  border-radius: 50%;\n  text-align: center;\n}\n\n/* On mouse-over, add a grey background color */\n.container:hover input ~ .checkmark {\n  background-color: #ccc;\n}\n\n/* When the radio button is checked, add a blue background */\n.container input:checked ~ .checkmark {\n  background-color: #2196F3;\n}\n.question-box {\n  background-color: rgb(255, 255, 255);\n  border-radius: 10px;\n  width: 600px;\n  border: 1px solid lightgray;\n  padding: 20px;\n  margin: 20px;\n  text-align: left;\n}\n\n.question-answer {\n  margin: 20px;\n  width: 650px;\n  text-align: left;\n}\n.question {\n  font-weight: bold;\n}\n</style>\n"]}]}